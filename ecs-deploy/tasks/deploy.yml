- name: "Starting ECS deployment"
  debug:
    msg: "Deploying '{{ aws_ecs_task_definition_arn }}' to service: {{ aws_ecs_service }} in cluster: {{ aws_ecs_cluster }}"

- name: Request ECS deployment
  shell: "aws ecs update-service --region {{ aws_region }} --service {{ aws_ecs_service }} --cluster {{ aws_ecs_cluster }} --task-definition {{ aws_ecs_task_definition_arn }} --force-new-deployment"
  environment: "{{ aws_env_credentials }}"
  register: result
  failed_when: "aws_ecs_task_definition_arn not in result.stdout"

- name: Verify ECS deployment
  shell: "aws ecs describe-services --region {{ aws_region }} --services {{ aws_ecs_service }} --cluster {{ aws_ecs_cluster }} --query 'services[*].deployments[?(status==`PRIMARY` && taskDefinition==`{{ aws_ecs_task_definition_arn }}`)].desiredCount' --output text"
  environment: "{{ aws_env_credentials }}"
  register: desiredCount
  failed_when: desiredCount.stdout.strip() == "0"
  retries: 30
  delay: 1
  until: desiredCount.stdout.strip() != "0"

- name: Starting new ECS tasks
  shell: "aws ecs describe-services --region {{ aws_region }} --services {{ aws_ecs_service }} --cluster {{ aws_ecs_cluster }} --query 'services[*].deployments[?(status==`PRIMARY` && taskDefinition==`{{ aws_ecs_task_definition_arn }}`)].runningCount' --output text"
  environment: "{{ aws_env_credentials }}"
  register: runningCount
  failed_when: runningCount.stdout.strip() != desiredCount.stdout.strip()
  retries: 600
  delay: 1
  until: runningCount.stdout.strip() == desiredCount.stdout.strip()

- name: Draining previous ECS tasks
  shell: "aws ecs describe-services --region {{ aws_region }} --services {{ aws_ecs_service }} --cluster {{ aws_ecs_cluster }} --query 'services[*].deployments[*]' --output text"
  environment: "{{ aws_env_credentials }}"
  register: activeDeployment
  failed_when: activeDeployment.stdout.find("ACTIVE") != -1
  retries: "{{ [default_healthcheck_grace_period, healthCheckGracePeriodSeconds.stdout | int] | max}}"
  delay: 1
  until: activeDeployment.stdout.find("ACTIVE") == -1

- name: "ECS deployment successful"
  debug:
    msg: "Deployment of '{{ aws_ecs_task_definition_arn }}' completed successfully"
