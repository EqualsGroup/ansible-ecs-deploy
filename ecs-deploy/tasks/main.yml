---

- name: Verify required variables
  fail:
    msg: "Required variable not set"
  when:
    - service is not defined
    - env is not defined
    - aws_ecs_cluster is not defined
    - aws_ecs_service is not defined
    - aws_ecs_task_definition_arn is not defined

- name: Assume deployer role
  sts_assume_role:
    role_arn: "{{ assume_role_arn }}"
    role_session_name: "deploy"
    duration_seconds: "{{ role_duration }}"
  register: assumed_role
  changed_when: false

- set_fact:
    aws_env_credentials:
      AWS_ACCESS_KEY_ID: "{{ assumed_role.sts_creds.access_key }}"
      AWS_SECRET_ACCESS_KEY: "{{ assumed_role.sts_creds.secret_key }}"
      AWS_SESSION_TOKEN: "{{ assumed_role.sts_creds.session_token }}"
      AWS_DEFAULT_REGION: "{{ aws_region }}"
  changed_when: false

- name: Get pre-deploy task definition
  shell: "aws ecs describe-services --region {{ aws_region }} --services {{ aws_ecs_service }} --cluster {{ aws_ecs_cluster }} --query 'services[*].taskDefinition' --output text"
  environment: "{{ aws_env_credentials }}"
  register: pre_deploy_task_defintion_arn
  failed_when: pre_deploy_task_defintion_arn.stdout.strip() == ""

- name: Get healthcheck grace period
  shell: "aws ecs describe-services --region {{ aws_region }} --services {{ aws_ecs_service }} --cluster {{ aws_ecs_cluster }} --query 'services[*].healthCheckGracePeriodSeconds' --output text"
  environment: "{{ aws_env_credentials }}"
  register: healthCheckGracePeriodSeconds

- set_fact:
    pre_deploy_task_defintion_arn: "{{ pre_deploy_task_defintion_arn.stdout.strip() }}"

- block:
    - include: deploy.yml
      static: no
  rescue:
    - name: "ECS deployment failed"
      debug:
        msg: "Attempting rollback to {{ pre_deploy_task_defintion_arn }}"
    - set_fact:
        aws_ecs_task_definition_arn: "{{ pre_deploy_task_defintion_arn }}"
    - include: deploy.yml
      static: no
    - fail:
        msg: "ECS Deployment failed. Rollback complete."
